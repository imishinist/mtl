name: Rust

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "mtl-*"
  pull_request:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1
  TERM: xterm

jobs:
  test:
    name: ${{ matrix.platform.os_name }} with rust stable
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            os_name: Linux-x86_64
            target: x86_64-unknown-linux-musl
            skip_tests: false
            name: mtl-Linux-x86_64-musl.tar.gz
            bin: mtl
          - os: ubuntu-latest
            os_name: Linux-aarch64
            target: aarch64-unknown-linux-musl
            skip_tests: false
            name: mtl-Linux-aarch64-musl.tar.gz
            bin: mtl
          - os: macos-latest
            os_name: macOS-x86_64
            target: x86_64-apple-darwin
            skip_tests: false
            name: mtl-Darwin-x86_64.tar.gz
            bin: mtl
          - os: macos-latest
            os_name: macOS-aarch64
            target: aarch64-apple-darwin
            skip_tests: true
            name: mtl-Darwin-aarch64.tar.gz
            bin: mtl
          - os: windows-latest
            os_name: Windows-x86_64
            target: x86_64-pc-windows-msvc
            skip_tests: true
            name: mtl-Windows-x86_64.zip
            bin: mtl.exe

    steps:
    - uses: actions/checkout@v4
    - name: Extract crate information
      shell: bash
      run: |
        echo "PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> $GITHUB_ENV
    - name: Install musl-tools on Linux
      run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
      if: contains(matrix.platform.target, 'musl')
    - name: Build binary
      uses: houseabsolute/actions-rust-cross@v0
      with:
        command: "build"
        target: ${{ matrix.platform.target }}
        toolchain: stable
        args: "--locked --release"
        strip: true
    - name: Run tests
      uses: houseabsolute/actions-rust-cross@v0
      with:
        command: "test"
        target: ${{ matrix.platform.target }}
        toolchain: stable
        args: "--locked --release"
      if: ${{ !matrix.platform.skip_tests }}
    - name: Package as archive
      shell: bash
      run: |
        cd target/${{ matrix.platform.target }}/release
        if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
          7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
        else
          tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
        fi
        cd -
      if: |
        startsWith( github.ref, 'refs/tags/v' ) || github.ref == 'refs/tags/test-release'
    - name: Publish release artifacts
      uses: actions/upload-artifact@v3
      with:
        name: mtl-${{ matrix.platform.os_name }}
        path: "mtl-*"
      if: github.ref == 'refs/tags/test-release'
    - name: Generate SHA-256
      run: shasum -a 256 ${{ matrix.platform.name }}
      if: |
        matrix.platform.os == 'macos-latest' &&
        ( startsWith( github.ref, 'refs/tags/v' ) ||
          github.ref == 'refs/tags/test-release' )
    - name: Publish GitHub release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: "mtl-*"
        body_path: Changes.md
      if: startsWith( github.ref, 'refs/tags/v' )

  e2e-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --locked
    - name: Run TEST
      run: |
        while read -r line; do
          bash $line
        done < <(find tests -name "*.sh" -type f -perm -u+x)

