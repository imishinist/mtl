name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  TERM: xterm

jobs:
  build:

    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu, use-cross: false, extension: "" }
          - { os: ubuntu-latest, target: x86_64-unknown-linux-musl, use-cross: true, extension: "" }
          - { os: ubuntu-latest, target: aarch64-unknown-linux-gnu, use-cross: true, extension: "" }
          - { os: ubuntu-latest, target: aarch64-unknown-linux-musl, use-cross: true, extension: "" }
          - { os: macos-latest, target: x86_64-apple-darwin, use-cross: false, extension: "" }
          - { os: macos-latest, target: aarch64-apple-darwin, use-cross: false, extension: "" }
          - { os: windows-latest, target: x86_64-pc-windows-msvc, use-cross: false, extension: .exe }

    steps:
    - uses: actions/checkout@v3
    - name: Extract crate information
      shell: bash
      run: |
        echo "PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> $GITHUB_ENV
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.job.target }}
        override: true
        profile: minimal
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.job.use-cross }}
        command: build
        args: --release --target ${{ matrix.job.target }}

  e2e-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install cargo-make
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: --debug cargo-make
    - name: Run TEST
      uses: actions-rs/cargo@v1
      with:
        command: make
        args: TEST
