name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  TERM: xterm

jobs:
  build:

    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            skip_tests: false
            bin: mtl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            skip_tests: false
            bin: mtl
          - os: macos-latest
            target: x86_64-apple-darwin
            skip_tests: false
            bin: mtl
          - os: macos-latest
            target: aarch64-apple-darwin
            skip_tests: false
            bin: mtl
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            skip_tests: true
            bin: mtl.exe

    steps:
    - uses: actions/checkout@v4
    - name: Extract crate information
      shell: bash
      run: |
        echo "PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> $GITHUB_ENV
    - name: Install musl-tools on Linux
      run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
      if: contains(matrix.platform.target, 'musl')
    - name: Build binary
      uses: houseabsolute/actions-rust-cross@v0
      with:
        command: "build"
        target: ${{ matrix.platform.target }}
        toolchain: stable
        args: "--locked"
        strip: true
    - name: Run tests
      uses: houseabsolute/actions-rust-cross@v0
      with:
        command: "test"
        target: ${{ matrix.platform.target }}
        toolchain: stable
        args: "--locked"
      if: ${{ !matrix.platform.skip_tests }}

  e2e-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --locked
    - name: Run TEST
      run: |
        while read -r line; do
          bash $line
        done < <(find tests -name "*.sh" -type f -perm -u+x)
